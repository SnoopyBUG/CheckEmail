import imaplib
import email
import time
from email.header import decode_header
# 邮箱服务器地址，参数有：邮箱服务器地址，邮箱账号，邮箱密码
def connect_to_email_server(imap_host, imap_user, imap_pass):
    """
    连接到 IMAP 邮件服务器并登录。
    """
    mail = imaplib.IMAP4_SSL(imap_host)
    mail.login(imap_user, imap_pass)
    return mail

# 解码邮件内容
def decode_payload(payload, charset):
    """
    尝试使用不同的编码来解码邮件内容。
    """
    try:
        return payload.decode(charset)
    except UnicodeDecodeError:
        try:
            return payload.decode('utf-8')
        except UnicodeDecodeError:
            try:
                return payload.decode('gbk')
            except UnicodeDecodeError:
                return payload.decode('latin1')

# 获取指定数量的最新邮件，参数包含：邮箱连接，邮件数量
def fetch_email(mail, email_id):
    """
    根据邮件ID获取邮件内容。
    """
    status, data = mail.fetch(email_id, '(RFC822)')
    msg = email.message_from_bytes(data[0][1])

    # 解码邮件主题
    subject, encoding = decode_header(msg["Subject"])[0]
    if isinstance(subject, bytes):
        subject = subject.decode(encoding or 'utf-8', errors='replace')

    # 提取纯文本内容
    text_content = ""
    if msg.is_multipart():
        for part in msg.walk():
            if part.get_content_type() == 'text/plain':
                payload = part.get_payload(decode=True)
                charset = part.get_content_charset()
                text_content = decode_payload(payload, charset)
                break
    else:
        if msg.get_content_type() == 'text/plain':
            payload = msg.get_payload(decode=True)
            charset = msg.get_content_charset()
            text_content = decode_payload(payload, charset)

    return subject, text_content

# 获取所有邮件的ID，参数为：邮箱连接
def get_all_email_ids(mail):
    """
    获取邮箱中所有邮件的ID。
    """
    mail.select('inbox')
    status, messages = mail.search(None, 'ALL')
    return messages[0].split()

# 监控邮箱，参数包含：邮箱服务器地址，邮箱账号，邮箱密码，监控间隔
def monitor_inbox(imap_host, imap_user, imap_pass, interval=60):
    """
    监控邮箱，新邮件到达时打印邮件内容。
    """
    print("开始监控邮箱...")
    mail = connect_to_email_server(imap_host, imap_user, imap_pass)
    last_checked_ids = set(get_all_email_ids(mail))

    try:
        while True:
            current_ids = set(get_all_email_ids(mail))
            new_ids = current_ids - last_checked_ids
            if new_ids:
                for email_id in new_ids:
                    subject, text_content = fetch_email(mail, email_id)
                    print("新邮件到达！")
                    print("Subject: ", subject)
                    print("Content: ", text_content)
                last_checked_ids = current_ids
            time.sleep(interval)
    finally:
        mail.logout()

def get_unseen_emails(imap_host, imap_user, imap_pass, num=1):
    """
    获取未读邮件的主题和内容。
    """
    mail = connect_to_email_server(imap_host, imap_user, imap_pass)
    mail.select('inbox')
    status, messages = mail.search(None, 'UNSEEN')
    unseen_ids = messages[0].split()
    if len(unseen_ids) == 0:
        print("没有未读邮件。")
        return
    try:
        for email_id in unseen_ids[:num]:
            subject, text_content = fetch_email(mail, email_id)
            print("未读邮件：")
            print("Subject: ", subject)
            print("Content: ", text_content)
            print()
            # 标记邮件为已读
            mail.store(email_id, '+FLAGS', '\\Seen')
    finally:
        mail.logout()



imap_info_qq = ['smtp.qq.com', 'xxx@qq.com', 'password']          # QQ邮箱的password为邮箱授权码，不是登录密码


get_unseen_emails(*imap_info_qq)
